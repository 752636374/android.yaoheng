package demo;

import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.util.ArrayList;

import com.mysql.jdbc.Connection;
import com.mysql.jdbc.PreparedStatement;

public class Demo {
	private static ArrayList<String> filelist = new ArrayList<String>();
	String driver="com.mysql.jdbc.Driver";
	 String url="jdbc:mysql://localhost:3306/fetal_heart_monitor";
	 String username="root";
	 String password="";
	 Connection conn=null;
	 
	 
	public static void main(String[] args) throws IOException {
		String filePath = "F:/jkjl";
		getFiles(filePath);
	}
	static void getFiles(String filePath) throws IOException {
		
		File root = new File(filePath);
		File[] files = root.listFiles();
		for (File file : files) {
			if (file.isDirectory()) {
				// System.out.println("显示"+filePath+"下所有子目录及其文件"+file.getAbsolutePath());
			} else {
				System.out.println("显示" + filePath + "下所有子目录" + file.getAbsolutePath());

				InputStream is = new FileInputStream(file.getAbsolutePath());
				byte[] byte1 = new byte[1024];
				byte[] data=new byte[4];
				int h=0;
				while ((is.read(byte1)) != -1) {
					int j = 0;
					for (int i = 0; i < byte1.length; i+=4,h++) {
						j++;	
						if(h>=4){
							System.out.println(Math.abs(data[0])+"/"+
									Math.abs(data[1])+"/"+
									Math.abs(data[2])+"/"+
									Math.abs(data[3]));
							h=0;
						}					
						data[h]=byte1[i];
					}
					byte1 = new byte[1024];
					
				}
					
				
			}
		}
	}
	
	
	
	 
	 
	public  Connection getConn(){
		try {
			Class.forName(driver);
			conn=(Connection) DriverManager.getConnection(url,username,password);
		} catch (ClassNotFoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		return conn;
	}

	public void insertintodata() throws SQLException{
		Connection connection=getConn();
		String sql="insert into tag_fetalpacket(fhr1) values";
		PreparedStatement preparedStatement;
		preparedStatement=(PreparedStatement) connection.prepareStatement(sql);
		preparedStatement.executeQuery();
	}
}
